ARG PYTHON_VERSION=3.11-slim
# ARG UV_PYTHON_VERSION=3.11


###
FROM python:${PYTHON_VERSION} AS base

LABEL maintainer="vlad-yarko"
LABEL org.opencontainers.image.source="https://github.com/vlad-yarko/my-django-rest-framework"
LABEL org.opencontainers.image.description=Django

RUN useradd -m django

# ENV UV_PYTHON=${UV_PYTHON_VERSION}

# COPY --chown=django --from=ghcr.io/astral-sh/uv:latest /uv /uvx /bin/

# Install necessary tools for uv and Python installation
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl ca-certificates build-essential libssl-dev zlib1g-dev libbz2-dev \
    libreadline-dev libsqlite3-dev libncursesw5-dev xz-utils tk-dev libxml2-dev \
    libxmlsec1-dev libffi-dev liblzma-dev

# Install uv
ADD https://astral.sh/uv/install.sh /uv-installer.sh
RUN sh /uv-installer.sh && rm /uv-installer.sh
ENV PATH="/root/.local/bin/:$PATH"

WORKDIR /app

COPY --chown=django pyproject.toml .


###
FROM base AS dev

USER root
RUN apt-get update && apt-get install -y \
    gcc \
    libpq-dev \
    && rm -rf /var/lib/apt/lists/*

RUN uv python install 3.11

RUN uv python pin 3.11

RUN uv venv --python 3.11

RUN uv sync --python 3.11

COPY --chown=django . .

# RUN uv run python my_django_rest_framework/manage.py migrate # You do not need to run migrations in the image

EXPOSE 8000

# USER django
USER root

ENTRYPOINT [ "uv", "run", "python" ]
CMD [ "my_django_rest_framework/manage.py", "runserver", "0.0.0.0:8000" ]
